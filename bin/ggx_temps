#!/usr/bin/env ruby
require "optparse"
require "yaml"
require_relative "../lib/ggx_monitor/temps"

begin

  banner = "\n\nThis utility lists (and optionally deletes) temp tables in "\
           "GeoGraphix\nprojects that are usually leftover from client crashes"\
           "and should be deleted.\nWARNING: These tables are NORMAL when "\
           "users are actively working in the\nprojects; only delete them if "\
           "you are absolutely certain that the project(s)\nare not in use.\n\n"\
           "Usage: ggx_temps [options]\n\n"

  options = {kill_temps: false}

  OptionParser.new do |opts|
    opts.banner = banner

    opts.on("-o", "--opts_path [PATH]", "Specify path to options file") do |o|
      options[:opts_path] = o
    end

    opts.on("-k", "--kill_temps", "Drop leftover temp tables") do |k|
      options[:kill_temps] = k
    end

    opts.on_tail("-h", "--help", "Show this message") do
      puts opts
      exit
    end

  end.parse!

  # merge optparser input with options from file (valid options.yml required)
  yml_path = options[:opts_path] ? options[:opts_path] : "./options.yml"
  if File.exists?(yml_path)
    Temps.set_opts = YAML.load_file(yml_path)[:temps].merge(options)
  else
    raise ArgumentError.new("invalid options file path: #{opts_path}") 
  end

  Temps.process_projects(options[:kill_temps])

rescue => e
  raise e if $DEBUG
  STDERR.puts e.message
  STDERR.puts e.backtrace.join("\n")
  exit 1
end

